Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    EXCLAMATION
    ELIF
    RETURN
    READ
    LESSTHAN
    INCLUDE
    RSB
    PRINT
    PATH
    NULL
    TRUE
    MINUS
    COMMENTBACK
    COMMENT
    GETEDGEFUNC
    LBR
    SEMICOLON
    LESSTHANOREQUALTO
    RBR
    NEWLINE
    NUMERIC
    UNDIREDGE
    ADJACENTFUNC
    SINGLEQUOTE
    PLUS
    DELETEEDGEFUNC
    COLON
    PATHFUNC
    NODE
    EQUALSFUNC
    DIVIDE
    FOR
    LOGICALOR
    GRAPH
    GREATERTHANOREQUALTO
    EQUALS
    PERIOD
    TIMES
    WRITE
    ADD
    GREATERTHAN
    FOREACH
    DOESNOTEQUAL
    IN
    LSB
    ELSE
    MODULUS
    DOUBLEQUOTE
    IF
    DELETEFUNC
    FALSE
    FINDSHORTESTFUNC
    LOGICALAND
    EQUALSEQUALS
    BREAK
    DIREDGE
    CONTINUE
    TIME
    COMMENTFRONT
    ADDEDGEFUNC

Grammar

Rule 0     S' -> function-definition
Rule 1     function-definition -> FUNC identifier LPAREN parameter-list RPAREN
Rule 2     identifier -> TEXT
Rule 3     parameter-list -> parameter-list COMMA identifier
Rule 4     parameter-list -> identifier

Terminals, with rules where they appear

ADD                  : 
ADDEDGEFUNC          : 
ADJACENTFUNC         : 
BREAK                : 
COLON                : 
COMMA                : 3
COMMENT              : 
COMMENTBACK          : 
COMMENTFRONT         : 
CONTINUE             : 
DELETEEDGEFUNC       : 
DELETEFUNC           : 
DIREDGE              : 
DIVIDE               : 
DOESNOTEQUAL         : 
DOUBLEQUOTE          : 
ELIF                 : 
ELSE                 : 
EQUALS               : 
EQUALSEQUALS         : 
EQUALSFUNC           : 
EXCLAMATION          : 
FALSE                : 
FINDSHORTESTFUNC     : 
FOR                  : 
FOREACH              : 
FUNC                 : 1
GETEDGEFUNC          : 
GRAPH                : 
GREATERTHAN          : 
GREATERTHANOREQUALTO : 
IF                   : 
IN                   : 
INCLUDE              : 
LBR                  : 
LESSTHAN             : 
LESSTHANOREQUALTO    : 
LOGICALAND           : 
LOGICALOR            : 
LPAREN               : 1
LSB                  : 
MINUS                : 
MODULUS              : 
NEWLINE              : 
NODE                 : 
NULL                 : 
NUMERIC              : 
PATH                 : 
PATHFUNC             : 
PERIOD               : 
PLUS                 : 
PRINT                : 
RBR                  : 
READ                 : 
RETURN               : 
RPAREN               : 1
RSB                  : 
SEMICOLON            : 
SINGLEQUOTE          : 
TEXT                 : 2
TIME                 : 
TIMES                : 
TRUE                 : 
UNDIREDGE            : 
WRITE                : 
error                : 

Nonterminals, with rules where they appear

function-definition  : 0
identifier           : 1 3 4
parameter-list       : 1 3

Parsing method: LALR

state 0

    (0) S' -> . function-definition
    (1) function-definition -> . FUNC identifier LPAREN parameter-list RPAREN

    FUNC            shift and go to state 1

    function-definition            shift and go to state 2

state 1

    (1) function-definition -> FUNC . identifier LPAREN parameter-list RPAREN
    (2) identifier -> . TEXT

    TEXT            shift and go to state 3

    identifier                     shift and go to state 4

state 2

    (0) S' -> function-definition .



state 3

    (2) identifier -> TEXT .

    RPAREN          reduce using rule 2 (identifier -> TEXT .)
    COMMA           reduce using rule 2 (identifier -> TEXT .)
    LPAREN          reduce using rule 2 (identifier -> TEXT .)


state 4

    (1) function-definition -> FUNC identifier . LPAREN parameter-list RPAREN

    LPAREN          shift and go to state 5


state 5

    (1) function-definition -> FUNC identifier LPAREN . parameter-list RPAREN
    (3) parameter-list -> . parameter-list COMMA identifier
    (4) parameter-list -> . identifier
    (2) identifier -> . TEXT

    TEXT            shift and go to state 3

    parameter-list                 shift and go to state 6
    identifier                     shift and go to state 7

state 6

    (1) function-definition -> FUNC identifier LPAREN parameter-list . RPAREN
    (3) parameter-list -> parameter-list . COMMA identifier

    RPAREN          shift and go to state 8
    COMMA           shift and go to state 9


state 7

    (4) parameter-list -> identifier .

    RPAREN          reduce using rule 4 (parameter-list -> identifier .)
    COMMA           reduce using rule 4 (parameter-list -> identifier .)


state 8

    (1) function-definition -> FUNC identifier LPAREN parameter-list RPAREN .

    $end            reduce using rule 1 (function-definition -> FUNC identifier LPAREN parameter-list RPAREN .)


state 9

    (3) parameter-list -> parameter-list COMMA . identifier
    (2) identifier -> . TEXT

    TEXT            shift and go to state 3

    identifier                     shift and go to state 10

state 10

    (3) parameter-list -> parameter-list COMMA identifier .

    RPAREN          reduce using rule 3 (parameter-list -> parameter-list COMMA identifier .)
    COMMA           reduce using rule 3 (parameter-list -> parameter-list COMMA identifier .)

